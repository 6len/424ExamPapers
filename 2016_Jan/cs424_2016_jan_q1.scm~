#lang scheme
(require srfi/13) 
(require racket/trace)

(define (reverse-with-count l1 l2)
	(if (not(null? (car l2)))
		(if (= 0 (car l2))
			(reverse-with-count (cdr l1) (cdr l2))
			(cons (reverse-with-count l1 (list-set l2 0 (car l2)-1) (car l1)))))

(reverse-with-count '(a b c) '(1 2 3))